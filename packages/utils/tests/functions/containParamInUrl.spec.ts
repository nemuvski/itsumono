import { test, expect } from 'vitest'
import { containParamInUrl } from '../../src'

test('containParamInUrl()', () => {
  expect(containParamInUrl('https://localhost:8080', 'test')).toBe(false)
  expect(containParamInUrl('https://localhost:8080/?test1=32', 'test')).toBe(false)
  expect(containParamInUrl('https://localhost:8080/?_test=32', '_test')).toBe(true)
  expect(containParamInUrl('https://localhost:8080/?test()=32', 'test()')).toBe(true)
  expect(containParamInUrl('https://localhost:8080/?test[]=32', 'test[]')).toBe(true)
  expect(containParamInUrl('https://localhost:8080/?test{}=32', 'test{}')).toBe(true)
  expect(containParamInUrl('https://localhost:8080/?@!test=32', '@!test')).toBe(true)
  expect(containParamInUrl('https://localhost:8080/?te.st=32', 'te.st')).toBe(true)
  expect(containParamInUrl('https://localhost:8080?test1=32&test2=', 'test')).toBe(false)
  expect(containParamInUrl('https://localhost:8080?#test=', 'test')).toBe(false)
  expect(containParamInUrl(new URL('https://localhost:8080?test=32').search, 'test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?_test=').search, '_test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test()=').search, 'test()')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test[]=').search, 'test[]')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test{}=').search, 'test{}')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?@!test=').search, '@!test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?te.st=').search, 'te.st')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080#?test=').search, 'test')).toBe(false)
  expect(containParamInUrl(new URL('https://localhost:8080?#test=').search, 'test')).toBe(false)
  expect(containParamInUrl(new URL('https://localhost:8080?test=32'), 'test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?_test='), '_test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test()='), 'test()')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test[]='), 'test[]')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test{}='), 'test{}')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?@!test='), '@!test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?te.st='), 'te.st')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080#?test='), 'test')).toBe(false)
  expect(containParamInUrl(new URL('https://localhost:8080?#test='), 'test')).toBe(false)
  expect(containParamInUrl(new URL('https://localhost:8080?test=32').searchParams, 'test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?_test=').searchParams, '_test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test()=').searchParams, 'test()')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test[]=').searchParams, 'test[]')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?test{}=').searchParams, 'test{}')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?@!test=').searchParams, '@!test')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080?te.st=').searchParams, 'te.st')).toBe(true)
  expect(containParamInUrl(new URL('https://localhost:8080#?test=').searchParams, 'test')).toBe(false)
  expect(containParamInUrl(new URL('https://localhost:8080?#test=').searchParams, 'test')).toBe(false)
})
